AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Household File API"
Parameters:
  LambdaRoleArn:
    Type: String
  UserPoolArn:
    Type: String
  Env:
    Type: String
  MongodbConnectionString:
    Type: String
  DependenciesLayer:
    Type: String

Conditions:
  ShouldUseLayers: !Not [!Equals [!Ref DependenciesLayer, "DependenciesLayer"]]

Globals:
  Function:
    Handler: index.default
    Runtime: nodejs20.x
    Timeout: 60
    MemorySize: 512
    Tracing: Active
    Tags:
      Application: !Sub Household-${Env}
    Layers:
      - !If [ShouldUseLayers, !Ref DependenciesLayer, !Ref "AWS::NoValue"]
    Environment:
      Variables:
        MONGODB_CONNECTION_STRING: !Ref MongodbConnectionString

Resources:
  FileApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub Household-${Env}-File
      StageName: file
      TracingEnabled: true
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      Auth:
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !Ref UserPoolArn
      GatewayResponses:
        UNAUTHORIZED:
          StatusCode: 401
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Headers: "'*'"
              Access-Control-Allow-Methods: "'*'"
          ResponseTemplates:
            application/json: '{ "message": $context.error.messageString }'
        MISSING_AUTHENTICATION_TOKEN:
          StatusCode: 404
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Headers: "'*'"
              Access-Control-Allow-Methods: "'*'"
          ResponseTemplates:
            application/json: '{ "message": $context.error.messageString }'

  ListFiles:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Household-${Env}-ListFiles
      CodeUri: dist/api/list-files
      Role: !Ref LambdaRoleArn
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FileApi
            Path: /v1/files
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer

  DeleteFile:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Household-${Env}-DeleteFile
      CodeUri: dist/api/delete-file
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          IMPORT_BUCKET: !Ref ImportBucket
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FileApi
            Path: /v1/files/{fileId}
            Method: DELETE
            Auth:
              Authorizer: CognitoAuthorizer

  CreateUploadUrl:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Household-${Env}-CreateUploadUrl
      CodeUri: dist/api/create-upload-url
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          IMPORT_BUCKET: !Ref ImportBucket
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FileApi
            Path: /v1/files
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer

  ImportBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
              - "*"
            AllowedMethods:
              - "PUT"
            AllowedHeaders:
              - "*"
            ExposedHeaders:
              - "ETag"
            MaxAge: 3000

  BulkTransactionImporter:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Household-${Env}-BulkTransactionImporter
      CodeUri: dist/api/bulk-transaction-importer
      Role: !Ref LambdaRoleArn
      Events:
        Import:
          Type: S3
          Properties:
            Bucket: !Ref ImportBucket
            Events:
              - "s3:ObjectCreated:*"

Outputs:
  FileApi:
    Description: "Household File API"
    Value: !Sub "${FileApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}"
