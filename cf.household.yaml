AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  Env:
    Type: String
  TestUserPassword:
    Type: String
    Default: ""    

Mappings: 
  EnvMapping: 
    LOCAL: 
      WebsiteDomain: local-household.losi999.hu
      ApiDomain: local-householdapi.losi999.hu
    DEV: 
      WebsiteDomain: dev-household.losi999.hu
      ApiDomain: dev-householdapi.losi999.hu
    CI: 
      WebsiteDomain: ci-household.losi999.hu
      ApiDomain: ci-householdapi.losi999.hu
    PROD: 
      WebsiteDomain: household.losi999.hu
      ApiDomain: householdapi.losi999.hu            

Resources:
  Functions:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: sam.functions.yaml
      Parameters:
        LambdaRoleArn: !GetAtt Infrastructure.Outputs.LambdaRoleArn
        MongooseLayer: !GetAtt Infrastructure.Outputs.MongooseLayer
        DatabaseArchiveBucket: !GetAtt Data.Outputs.DatabaseArchiveBucket
        Env: !Ref Env
        TestUserPassword: !Ref TestUserPassword
        UserPoolId: !GetAtt Data.Outputs.UserPoolId
        ClientId: !GetAtt Data.Outputs.ClientId
        MongodbConnectionString: !Sub "mongodb+srv://{{resolve:ssm:MongodbUsername:1}}:{{resolve:ssm:MongodbPassword:1}}@{{resolve:ssm:MongodbClusterDomain:1}}/household-${Env}?retryWrites=true&w=majority"

  Data:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: cf.data.yaml
      Parameters:
        Env: !Ref Env

  Infrastructure:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: cf.infrastructure.yaml
      Parameters:
        Env: !Ref Env

  Project:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: sam.project.yaml
      Parameters:
        LambdaRoleArn: !GetAtt Infrastructure.Outputs.LambdaRoleArn
        MongooseLayer: !GetAtt Infrastructure.Outputs.MongooseLayer
        UserPoolArn: !GetAtt Data.Outputs.UserPoolArn
        Env: !Ref Env
        MongodbConnectionString: !Sub "mongodb+srv://{{resolve:ssm:MongodbUsername:1}}:{{resolve:ssm:MongodbPassword:1}}@{{resolve:ssm:MongodbClusterDomain:1}}/household-${Env}?retryWrites=true&w=majority"

  Recipient:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: sam.recipient.yaml
      Parameters:
        LambdaRoleArn: !GetAtt Infrastructure.Outputs.LambdaRoleArn
        MongooseLayer: !GetAtt Infrastructure.Outputs.MongooseLayer
        UserPoolArn: !GetAtt Data.Outputs.UserPoolArn
        Env: !Ref Env
        MongodbConnectionString: !Sub "mongodb+srv://{{resolve:ssm:MongodbUsername:1}}:{{resolve:ssm:MongodbPassword:1}}@{{resolve:ssm:MongodbClusterDomain:1}}/household-${Env}?retryWrites=true&w=majority"

  Account:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: sam.account.yaml
      Parameters:
        LambdaRoleArn: !GetAtt Infrastructure.Outputs.LambdaRoleArn
        MongooseLayer: !GetAtt Infrastructure.Outputs.MongooseLayer
        UserPoolArn: !GetAtt Data.Outputs.UserPoolArn
        Env: !Ref Env
        MongodbConnectionString: !Sub "mongodb+srv://{{resolve:ssm:MongodbUsername:1}}:{{resolve:ssm:MongodbPassword:1}}@{{resolve:ssm:MongodbClusterDomain:1}}/household-${Env}?retryWrites=true&w=majority"

  Category:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: sam.category.yaml
      Parameters:
        LambdaRoleArn: !GetAtt Infrastructure.Outputs.LambdaRoleArn
        MongooseLayer: !GetAtt Infrastructure.Outputs.MongooseLayer
        UserPoolArn: !GetAtt Data.Outputs.UserPoolArn
        Env: !Ref Env
        MongodbConnectionString: !Sub "mongodb+srv://{{resolve:ssm:MongodbUsername:1}}:{{resolve:ssm:MongodbPassword:1}}@{{resolve:ssm:MongodbClusterDomain:1}}/household-${Env}?retryWrites=true&w=majority"
        
  Transaction:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: sam.transaction.yaml
      Parameters:
        LambdaRoleArn: !GetAtt Infrastructure.Outputs.LambdaRoleArn
        MongooseLayer: !GetAtt Infrastructure.Outputs.MongooseLayer
        UserPoolArn: !GetAtt Data.Outputs.UserPoolArn
        Env: !Ref Env
        MongodbConnectionString: !Sub "mongodb+srv://{{resolve:ssm:MongodbUsername:1}}:{{resolve:ssm:MongodbPassword:1}}@{{resolve:ssm:MongodbClusterDomain:1}}/household-${Env}?retryWrites=true&w=majority"

  User:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: sam.user.yaml
      Parameters:
        LambdaRoleArn: !GetAtt Infrastructure.Outputs.LambdaRoleArn
        UserPoolId: !GetAtt Data.Outputs.UserPoolId
        ClientId: !GetAtt Data.Outputs.ClientId
        Env: !Ref Env        

  Api:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub "Household ${Env}-API"
        Aliases: 
          - !FindInMap [EnvMapping, !Ref Env, ApiDomain]
        ViewerCertificate:
          AcmCertificateArn: "{{resolve:ssm:DomainCertificateArn:1}}"
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019          
        Enabled: true
        PriceClass: PriceClass_100
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - PATCH
            - POST
            - DELETE
          MinTTL: 0
          MaxTTL: 0
          DefaultTTL: 0
          ForwardedValues:
            QueryString: true
          TargetOriginId: Project
        CacheBehaviors:
          - ForwardedValues:
              QueryString: true
              Headers:
                - Authorization
            PathPattern: /project/*
            TargetOriginId: Project
            ViewerProtocolPolicy: redirect-to-https
            MinTTL: 0
            MaxTTL: 0
            DefaultTTL: 0
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
          - ForwardedValues:
              QueryString: true
              Headers:
                - Authorization
            PathPattern: /recipient/*
            TargetOriginId: Recipient
            ViewerProtocolPolicy: redirect-to-https
            MinTTL: 0
            MaxTTL: 0
            DefaultTTL: 0
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
          - ForwardedValues:
              QueryString: true
              Headers:
                - Authorization
            PathPattern: /account/*
            TargetOriginId: Account
            ViewerProtocolPolicy: redirect-to-https
            MinTTL: 0
            MaxTTL: 0
            DefaultTTL: 0
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
          - ForwardedValues:
              QueryString: true
              Headers:
                - Authorization
            PathPattern: /category/*
            TargetOriginId: Category
            ViewerProtocolPolicy: redirect-to-https
            MinTTL: 0
            MaxTTL: 0
            DefaultTTL: 0
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE     
          - ForwardedValues:
              QueryString: true
              Headers:
                - Authorization
            PathPattern: /transaction/*
            TargetOriginId: Transaction
            ViewerProtocolPolicy: redirect-to-https
            MinTTL: 0
            MaxTTL: 0
            DefaultTTL: 0
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE           
          - ForwardedValues:
              QueryString: true
              Headers:
                - Authorization
            PathPattern: /user/*
            TargetOriginId: User
            ViewerProtocolPolicy: redirect-to-https
            MinTTL: 0
            MaxTTL: 0
            DefaultTTL: 0
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE                          
        Origins:
          - DomainName: !GetAtt Project.Outputs.ProjectApi
            Id: Project
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
          - DomainName: !GetAtt Recipient.Outputs.RecipientApi
            Id: Recipient
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
          - DomainName: !GetAtt Account.Outputs.AccountApi
            Id: Account
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
          - DomainName: !GetAtt Category.Outputs.CategoryApi
            Id: Category
            CustomOriginConfig:
              OriginProtocolPolicy: https-only        
          - DomainName: !GetAtt Transaction.Outputs.TransactionApi
            Id: Transaction
            CustomOriginConfig:
              OriginProtocolPolicy: https-only  
          - DomainName: !GetAtt User.Outputs.UserApi
            Id: User
            CustomOriginConfig:
              OriginProtocolPolicy: https-only                             

  ApiDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: "losi999.hu."
      AliasTarget:
        DNSName: !GetAtt Api.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      Name: !FindInMap [EnvMapping, !Ref Env, ApiDomain]
      Type: A

  Website:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - Api
    Properties:
      DistributionConfig:
        Comment: !Sub "Household ${Env}-Web"
        Aliases: 
          - !FindInMap [EnvMapping, !Ref Env, WebsiteDomain]
        ViewerCertificate:
          AcmCertificateArn: "{{resolve:ssm:DomainCertificateArn:1}}"
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019  
        Enabled: true
        PriceClass: PriceClass_100
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
          MinTTL: 0
          MaxTTL: 0
          DefaultTTL: 0
          TargetOriginId: Web
          ForwardedValues:
            QueryString: true
        Origins:
          - DomainName: !Sub ${Infrastructure.Outputs.WebsiteBucket}.s3-website-${AWS::Region}.${AWS::URLSuffix}
            Id: Web
            CustomOriginConfig:
              OriginProtocolPolicy: http-only

  WebsiteDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: "losi999.hu."
      AliasTarget:
        DNSName: !GetAtt Website.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      Name: !FindInMap [EnvMapping, !Ref Env, WebsiteDomain]
      Type: A

Outputs:
  HouseholdApi:
    Description: "Household API"
    Value: !Sub
             - "https://${Domain}"
             - Domain: !FindInMap [EnvMapping, !Ref Env, ApiDomain]
  HouseholdWeb:
    Description: "Household Web"
    Value: !Sub
             - "https://${Domain}"
             - Domain: !FindInMap [EnvMapping, !Ref Env, WebsiteDomain]
  WebsiteBucket:
    Value: !GetAtt Infrastructure.Outputs.WebsiteBucket
