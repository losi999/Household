AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Household Functions"
Parameters:
  LambdaRoleArn:
    Type: String
  Env:
    Type: String
  MongodbConnectionString:
    Type: String
  DependenciesLayer:
    Type: String
  DatabaseArchiveBucket:
    Type: String
  TestUserPassword:
    Type: String
    Default: ""
  UserPoolId:
    Type: String
  ClientId:
    Type: String

Conditions:
  ShouldUseLayers: !Not [!Equals [!Ref DependenciesLayer, "DependenciesLayer"]]
  IsProd: !Equals [!Ref Env, "PROD"]
  HasTestUserPassword: !Not [!Equals [!Ref TestUserPassword, ""]]
  ShouldCreateTestUsers: !And
    - !Condition HasTestUserPassword
    - !Not [!Condition IsProd]

Globals:
  Function:
    Handler: index.default
    Runtime: nodejs20.x
    Timeout: 60
    MemorySize: 512
    Tracing: Active
    Tags:
      Application: !Sub Household-${Env}
    Layers:
      - !If [ShouldUseLayers, !Ref DependenciesLayer, !Ref "AWS::NoValue"]
    Environment:
      Variables:
        MONGODB_CONNECTION_STRING: !Ref MongodbConnectionString

Resources:
  DatabaseArchive:
    Type: AWS::Serverless::Function
    Condition: IsProd
    Properties:
      FunctionName: !Sub Household-${Env}-DatabaseArchive
      CodeUri: dist/api/database-archive
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          DATABASE_ARCHIVE_BUCKET: !Ref DatabaseArchiveBucket
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Enabled: true
            Schedule: "cron(0 0 * * ? *)"

  PostDeploy:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Household-${Env}-PostDeploy
      CodeUri: dist/api/post-deploy
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          INFRASTRUCTURE_STACK: !Ref AWS::StackName

  CreateTestUsers:
    Type: AWS::Serverless::Function
    Condition: ShouldCreateTestUsers
    Properties:
      FunctionName: !Sub Household-${Env}-CreateTestUsers
      CodeUri: dist/api/create-test-users
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPoolId
          CLIENT_ID: !Ref ClientId
          ADMIN_COUNT: "1"
          TEST_USER_PASSWORD: !Ref TestUserPassword

Outputs:
  PostDeployCreateTestUsers:
    Value: !If [ShouldCreateTestUsers, !GetAtt CreateTestUsers.Arn, ""]
