version: 2.1
orbs:
  sam: circleci/aws-sam-serverless@3.0
commands:
  list-files:
    steps:
      - run:
          name: List files
          command: |
            echo "current folder $(pwd)"
            echo ""
            echo "current folder contents"
            ls -l
            echo ""
            echo "web folder"
            ls -l web
            echo ""
            echo "test folder"
            ls -l test
            echo ""
jobs:
  install:
    docker:
      - image: cimg/node:18.18
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: cache-yarn-v1-{{checksum "yarn.lock"}}-{{checksum "web/yarn.lock"}}-{{checksum "test/yarn.lock"}}-{{checksum "layers/mongoose/nodejs/yarn.lock"}}
      - restore_cache:
          key: cache-cypress-v2-{{checksum "test/yarn.lock"}}
      - run:
          name: Install API dependencies
          command: yarn
      - run:
          name: Install web dependencies
          command: yarn
          working_directory: web
      - run:
          name: Installing layer dependencies
          command: yarn
          working_directory: layers/mongoose/nodejs
      - run:
          name: Install test dependencies
          command: yarn
          working_directory: test
      - list-files
      - save_cache:
          key: cache-yarn-v1-{{checksum "yarn.lock"}}-{{checksum "web/yarn.lock"}}-{{checksum "test/yarn.lock"}}-{{checksum "layers/mongoose/nodejs/yarn.lock"}}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: cache-cypress-v2-{{checksum "test/yarn.lock"}}
          paths:
            - ~/.cache/Cypress
            - /root/.cache/Cypress
      - persist_to_workspace:
          root: ~/
          paths:
            - repo
  unit_test:
    docker:
      - image: cimg/node:18.18
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Running API unit tests
          command: yarn test:api

      # - run:
      #     name: Running Web unit tests
      #     command: yarn test:web

      - store_artifacts:
          path: coverage
          destination: coverage
  lint:
    docker:
      - image: cimg/node:18.18
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Running linter
          command: yarn lint
  build:
    parameters:
      env:
        type: string
    docker:
      - image: cimg/node:18.18
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Build API
          command: yarn build:api

      - run:
          name: Build Web
          command: yarn build:web -c <<parameters.env>>

      - persist_to_workspace:
          root: ~/
          paths:
            - repo/dist
            - repo/layers
  api_deploy:
    executor: sam/default
    parameters:
      env:
        type: string
      cypress_password:
        type: string
        default: ${CYPRESS_PASSWORD}
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/
      - sam/install
      - deploy:
          name: SAM Deploy
          command: sam deploy --template-file cf.household.yaml --s3-bucket ${AWS_PACKAGES_S3} --stack-name Household-<<parameters.env>> --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND CAPABILITY_NAMED_IAM --parameter-overrides Env=<<parameters.env>> TestUserPassword=<<parameters.cypress_password>>
      - run:
          name: Invoke Post deploy Lambda
          command: aws lambda invoke --function-name Household-<<parameters.env>>-PostDeploy /dev/null
  web_deploy:
    parameters:
      env:
        type: string
    docker:
      - image: cibuilds/aws:1.16.1
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/
      - deploy:
          name: Web deploy
          command: aws s3 sync dist/web s3://$(aws cloudformation describe-stacks --stack-name Household-<<parameters.env>> --query "Stacks[0].Outputs[?OutputKey=='WebsiteBucket'].OutputValue" --output text)
  test:
    parameters:
      env:
        type: string
    docker:
      - image: cypress/base:16.14.2
    environment:
      ENV: <<parameters.env>>
      CYPRESS_ENV: <<parameters.env>>
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/
      - list-files

      - restore_cache:
          key: cache-cypress-v2-{{checksum "test/yarn.lock"}}
      - list-files

      - run:
          name: Setting MongoDB connection string
          command: echo "export MONGODB_CONNECTION_STRING=\"mongodb+srv://$MONGODB_USERNAME:$MONGODB_PASSWORD@$MONGODB_CLUSTER_DOMAIN/household-<<parameters.env>>?retryWrites=true&w=majority\"" >> "$BASH_ENV"

      - run:
          name: Running tests
          working_directory: test
          command: yarn run test

      - store_artifacts:
          path: test/cypress/screenshots
          destination: test/cypress/screenshots
workflows:
  local:
    jobs:
      - install:
          name: install
          filters:
            branches:
              ignore:
                - development
                - master
                - feature/dev
      - unit_test:
          name: unit_test
          requires:
            - install
      - lint:
          name: lint
          requires:
            - install
      - build:
          name: build_local
          env: "LOCAL"
          requires:
            - install

  dev:
    jobs:
      - install:
          name: install
          filters:
            branches:
              only:
                - development
                - feature/dev
      # - unit_test:
      #     name: unit_test
      #     requires:
      #       - install
      # - lint:
      #     name: lint
      #     requires:
      #       - install
      # - build:
      #     name: build_dev
      #     env: "DEV"
      #     requires:
      #       - install
      # - api_deploy:
      #     name: api_deploy_dev
      #     env: "DEV"
      #     requires:
      #       - unit_test
      #       - lint
      #       - build_dev
      # - web_deploy:
      #     name: web_deploy_dev
      #     env: "DEV"
      #     requires:
      #       - api_deploy_dev
      - test:
          name: test_dev
          env: "DEV"
          requires:
            # - web_deploy_dev
            - install

  prod:
    jobs:
      - install:
          name: install
          filters:
            branches:
              only:
                - master
      - unit_test:
          name: unit_test
          requires:
            - install
      - lint:
          name: lint
          requires:
            - install
      - build:
          name: build_prod
          env: "PROD"
          requires:
            - install
      - api_deploy:
          name: api_deploy_prod
          env: "PROD"
          cypress_password: '"''''"'
          requires:
            - unit_test
            - lint
            - build_prod
      - web_deploy:
          name: web_deploy_prod
          env: "PROD"
          requires:
            - api_deploy_prod
