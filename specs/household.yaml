openapi: "3.0.2"
info:
  title: Household API
  version: 1.0.0
paths:
  /account/v1/accounts:
    get:
      tags:
        - account
      responses:
        200:
          description: List of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "account.yaml#/components/schemas/Response"
    post:
      tags:
        - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "account.yaml#/components/schemas/Request"
      responses:
        201:
          description: Account id
          content:
            application/json:
              schema:
                $ref: "account.yaml#/components/schemas/AccountId"
  /account/v1/accounts/{accountId}:
    parameters:
      - $ref: "#/components/parameters/Path.AccountId"
    get:
      tags:
        - account
      responses:
        200:
          description: Account details
          content:
            application/json:
              schema:
                $ref: "account.yaml#/components/schemas/Response"
    put:
      tags:
        - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "account.yaml#/components/schemas/Request"
      responses:
        200:
          description: Account id
          content:
            application/json:
              schema:
                $ref: "account.yaml#/components/schemas/AccountId"
    delete:
      tags:
        - account
      responses:
        204:
          description: Account deleted
  /category/v1/categories:
    get:
      tags:
        - category
      responses:
        200:
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "category.yaml#/components/schemas/Response"
    post:
      tags:
        - category
      requestBody:
        content:
          application/json:
            schema:
              $ref: "category.yaml#/components/schemas/Request"
      responses:
        201:
          description: Category id
          content:
            application/json:
              schema:
                $ref: "category.yaml#/components/schemas/CategoryId"
  /category/v1/categories/{categoryId}:
    parameters:
      - $ref: "#/components/parameters/Path.CategoryId"
    get:
      tags:
        - category
      responses:
        200:
          description: Category details
          content:
            application/json:
              schema:
                $ref: "category.yaml#/components/schemas/Response"
    put:
      tags:
        - category
      requestBody:
        content:
          application/json:
            schema:
              $ref: "category.yaml#/components/schemas/Request"
      responses:
        200:
          description: Category id
          content:
            application/json:
              schema:
                $ref: "category.yaml#/components/schemas/CategoryId"
    delete:
      tags:
        - category
      responses:
        204:
          description: Category deleted
  /category/v1/categories/{categoryId}/merge:
    parameters:
      - $ref: "#/components/parameters/Path.CategoryId"
    post:
      tags:
        - category
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        201:
          description: Category id
          content:
            application/json:
              schema:
                $ref: "category.yaml#/components/schemas/CategoryId"
  /product/v1/categories/{categoryId}/products:
    parameters:
      - $ref: "#/components/parameters/Path.CategoryId"
    post:
      tags:
        - product
      requestBody:
        content:
          application/json:
            schema:
              $ref: "product.yaml#/components/schemas/Request"
      responses:
        201:
          description: Product id
          content:
            application/json:
              schema:
                $ref: "product.yaml#/components/schemas/ProductId"
  /product/v1/products:
    get:
      tags:
        - product
      responses:
        200:
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "category.yaml#/components/schemas/FullName"
                    - $ref: "category.yaml#/components/schemas/Products"

  /product/v1/products/{productId}:
    parameters:
      - $ref: "#/components/parameters/Path.ProductId"
    put:
      tags:
        - product
      requestBody:
        content:
          application/json:
            schema:
              $ref: "product.yaml#/components/schemas/Request"
      responses:
        200:
          description: Product id
          content:
            application/json:
              schema:
                $ref: "product.yaml#/components/schemas/ProductId"
    delete:
      tags:
        - product
      responses:
        204:
          description: Product deleted
  /product/v1/products/{productId}/merge:
    parameters:
      - $ref: "#/components/parameters/Path.ProductId"
    post:
      tags:
        - product
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        201:
          description: Product id
          content:
            application/json:
              schema:
                $ref: "product.yaml#/components/schemas/ProductId"

  /project/v1/projects:
    get:
      tags:
        - project
      responses:
        200:
          description: List of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "project.yaml#/components/schemas/Response"
    post:
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "project.yaml#/components/schemas/Request"
      responses:
        201:
          description: Project id
          content:
            application/json:
              schema:
                $ref: "project.yaml#/components/schemas/ProjectId"
  /project/v1/projects/{projectId}:
    parameters:
      - $ref: "#/components/parameters/Path.ProjectId"
    get:
      tags:
        - project
      responses:
        200:
          description: Project details
          content:
            application/json:
              schema:
                $ref: "project.yaml#/components/schemas/Response"
    put:
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "project.yaml#/components/schemas/Request"
      responses:
        200:
          description: Project id
          content:
            application/json:
              schema:
                $ref: "project.yaml#/components/schemas/ProjectId"
    delete:
      tags:
        - project
      responses:
        204:
          description: Project deleted
  /project/v1/projects/{projectId}/merge:
    parameters:
      - $ref: "#/components/parameters/Path.ProjectId"
    post:
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        201:
          description: Project id
          content:
            application/json:
              schema:
                $ref: "project.yaml#/components/schemas/ProjectId"
  /recipient/v1/recipients:
    get:
      tags:
        - recipient
      responses:
        200:
          description: List of recipients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "recipient.yaml#/components/schemas/Response"
    post:
      tags:
        - recipient
      requestBody:
        content:
          application/json:
            schema:
              $ref: "recipient.yaml#/components/schemas/Request"
      responses:
        201:
          description: Recipient id
          content:
            application/json:
              schema:
                $ref: "recipient.yaml#/components/schemas/RecipientId"
  /recipient/v1/recipients/{recipientId}:
    parameters:
      - $ref: "#/components/parameters/Path.RecipientId"
    get:
      tags:
        - recipient
      responses:
        200:
          description: Recipient details
          content:
            application/json:
              schema:
                $ref: "recipient.yaml#/components/schemas/Response"
    put:
      tags:
        - recipient
      requestBody:
        content:
          application/json:
            schema:
              $ref: "recipient.yaml#/components/schemas/Request"
      responses:
        200:
          description: Recipient id
          content:
            application/json:
              schema:
                $ref: "recipient.yaml#/components/schemas/RecipientId"
    delete:
      tags:
        - recipient
      responses:
        204:
          description: Recipient deleted
  /recipient/v1/recipients/{recipientId}/merge:
    parameters:
      - $ref: "#/components/parameters/Path.RecipientId"
    post:
      tags:
        - recipient
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        201:
          description: Recipient id
          content:
            application/json:
              schema:
                $ref: "recipient.yaml#/components/schemas/RecipientId"
  # /report/v1/reports:
  #   get:
  #     responses:
  #       200:
  #         description: List of saved reports
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 type: object
  #                 required:
  #                   - name
  #                   - filters
  #                 properties:
  #                   name:
  #                     type: string
  #                     minLength: 1
  #                   filters:
  #                     type: object
  #                     minProperties: 1
  #                     properties:
  #                       accountIds:
  #                         type: array
  #                         items:
  #                           type: string
  #                           minLength: 1
  #                       categoryIds:
  #                         type: array
  #                         items:
  #                           type: string
  #                           minLength: 1
  #                       projectIds:
  #                         type: array
  #                         items:
  #                           type: string
  #                           minLength: 1
  #                       productIds:
  #                         type: array
  #                         items:
  #                           type: string
  #                           minLength: 1
  #                       recipientIds:
  #                         type: array
  #                         items:
  #                           type: string
  #                           minLength: 1
  #                       issuedAtFrom:
  #                         type: string
  #                         format: date-time
  #                       issuedAtTo:
  #                         type: string
  #                         format: date-time
  #   post:
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "report.yaml#/components/schemas/Request"
  #     responses:
  #       200:
  #         description: Generated report
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: "report.yaml#/components/schemas/Response"
  /transaction/v1/accounts/{accountId}/transactions:
    parameters:
      - $ref: "#/components/parameters/Path.AccountId"
    get:
      tags:
        - transaction
      responses:
        200:
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "transaction.yaml#/components/schemas/Response"
  /transaction/v1/accounts/{accountId}/transactions/{transactionId}:
    parameters:
      - $ref: "#/components/parameters/Path.AccountId"
      - $ref: "#/components/parameters/Path.TransactionId"
    get:
      tags:
        - transaction
      responses:
        200:
          description: Details of transaction
          content:
            application/json:
              schema:
                $ref: "transaction.yaml#/components/schemas/Response"
  /transaction/v1/transactions/deferred:
    get:
      tags:
        - transaction
      parameters:
        - $ref: "#/components/parameters/Query.IsSettled"
        - $ref: "#/components/parameters/Query.TransactionId"
      responses:
        200:
          description: Transaction response list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "transaction.yaml#/components/schemas/DeferredResponse"
  /transaction/v1/transactionReports:
    post:
      tags:
        - transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "report.yaml#/components/schemas/Request"
      responses:
        200:
          description: Transaction report
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "transaction.yaml#/components/schemas/Report"
  /transaction/v1/transactions/payment:
    post:
      tags:
        - transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "transaction.yaml#/components/schemas/PaymentRequest"
      responses:
        201:
          description: Transaction id
          content:
            application/json:
              schema:
                $ref: "transaction.yaml#/components/schemas/TransactionId"
  /transaction/v1/transactions/split:
    post:
      tags:
        - transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "transaction.yaml#/components/schemas/SplitRequest"
      responses:
        201:
          description: Transaction id
          content:
            application/json:
              schema:
                $ref: "transaction.yaml#/components/schemas/TransactionId"
  /transaction/v1/transactions/transfer:
    post:
      tags:
        - transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "transaction.yaml#/components/schemas/TransferRequest"
      responses:
        201:
          description: Transaction id
          content:
            application/json:
              schema:
                $ref: "transaction.yaml#/components/schemas/TransactionId"
  /transaction/v1/transactions/{transactionId}/payment:
    parameters:
      - $ref: "#/components/parameters/Path.TransactionId"
    put:
      tags:
        - transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "transaction.yaml#/components/schemas/PaymentRequest"
      responses:
        201:
          description: Transaction id
          content:
            application/json:
              schema:
                $ref: "transaction.yaml#/components/schemas/TransactionId"
  /transaction/v1/transactions/{transactionId}/split:
    parameters:
      - $ref: "#/components/parameters/Path.TransactionId"
    put:
      tags:
        - transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "transaction.yaml#/components/schemas/SplitRequest"
      responses:
        201:
          description: Transaction id
          content:
            application/json:
              schema:
                $ref: "transaction.yaml#/components/schemas/TransactionId"
  /transaction/v1/transactions/{transactionId}/transfer:
    parameters:
      - $ref: "#/components/parameters/Path.TransactionId"
    put:
      tags:
        - transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "transaction.yaml#/components/schemas/TransferRequest"
      responses:
        201:
          description: Transaction id
          content:
            application/json:
              schema:
                $ref: "transaction.yaml#/components/schemas/TransactionId"
  # /transaction/v1/transactions:
  /transaction/v1/transactions/{transactionId}:
    delete:
      tags:
        - transaction
      responses:
        204:
          description: Transaction deleted
  /file/v1/files:
    get:
      tags:
        - file
      responses:
        200:
          description: List of files
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "file.yaml#/components/schemas/FileId"
                    - $ref: "file.yaml#/components/schemas/FileType"
                    - type: object
                      required:
                        - uploadedAt
                        - draftCount
                      properties:
                        uploadedAt:
                          type: string
                          format: date-time
                        draftCount:
                          type: integer

    post:
      tags:
        - file
      requestBody:
        content:
          application/json:
            schema:
              $ref: "file.yaml#/components/schemas/FileType"
      responses:
        201:
          description: Presigned Url
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "file.yaml#/components/schemas/Url"
                  - $ref: "file.yaml#/components/schemas/FileId"
  /file/v1/files/{fileId}:
    parameters:
      - $ref: "#/components/parameters/Path.FileId"
    delete:
      tags:
        - file
      responses:
        204:
          description: File and related drafts are deleted
  /transaction/v1/files/{fileId}/transactions:
    parameters:
      - $ref: "#/components/parameters/Path.FileId"
    get:
      tags:
        - transaction
      responses:
        200:
          description: List of draft transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "transaction.yaml#/components/schemas/DraftResponse"

components:
  parameters:
    Path.RecipientId:
      name: recipientId
      in: path
      required: true
      schema:
        type: string
    Path.ProjectId:
      name: projectId
      in: path
      required: true
      schema:
        type: string
    Path.ProductId:
      name: productId
      in: path
      required: true
      schema:
        type: string
    Path.CategoryId:
      name: categoryId
      in: path
      required: true
      schema:
        type: string
    Path.AccountId:
      name: accountId
      in: path
      required: true
      schema:
        type: string
    Path.TransactionId:
      name: transactionId
      in: path
      required: true
      schema:
        type: string
    Path.FileId:
      name: fileId
      in: path
      required: true
      schema:
        type: string
    Query.TransactionId:
      name: transactionId
      in: query
      required: false
      schema:
        type: string
    Query.IsSettled:
      name: isSettled
      in: query
      required: false
      schema:
        type: boolean
