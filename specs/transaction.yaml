openapi: "3.0.0"
info:
  title: Transaction components
  version: 1.0.0
components:
  schemas:
    TransactionId:
      type: object
      required:
        - transactionId
      properties:
        transactionId:
          type: string
    IssuedAt:
      type: object
      required:
        - issuedAt
      properties:
        issuedAt:
          type: string
          format: date-time
    Base:
      type: object
      required:
        - amount
      properties:
        amount:
          type: number
        description:
          type: string
          minLength: 1
    Inventory:
      type: object
      properties:
        inventory:
          type: object
          required:
            - quantity
          properties:
            quantity:
              type: number
              minimum: 0
              exclusiveMinimum: true
    Inventory.Request:
      allOf:
        - $ref: "#/components/schemas/Inventory"
        - type: object
          properties:
            inventory:
              type: object
              required:
                - product
              properties:
                product:
                  oneOf:
                    - $ref: "product.yaml#/components/schemas/ProductId"
                    - $ref: "product.yaml#/components/schemas/Request"
    Inventory.Response:
      allOf:
        - $ref: "#/components/schemas/Inventory"
        - type: object
          properties:
            inventory:
              type: object
              required:
                - product
              properties:
                product:
                  $ref: "product.yaml#/components/schemas/Response"
    Invoice:
      type: object
      properties:
        invoice:
          type: object
          required:
            - billingStartDate
            - billingEndDate
          properties:
            invoiceNumber:
              type: string
              minLength: 1
            billingStartDate:
              type: string
              format: date-time
            billingEndDate:
              type: string
              format: date-time
    TransferAccountId:
      type: object
      required:
        - transferAccountId
      properties:
        transferAccountId:
          type: string
          minLength: 1
    TransferAmount:
      type: object
      required:
        - transferAmount
      properties:
        transferAmount:
          type: string
          minLength: 1
    Category.Request:
      type: object
      properties:
        category:
          oneOf:
            - $ref: "category.yaml#/components/schemas/CategoryId"
            - $ref: "category.yaml#/components/schemas/Request"
    Category.Response:
      type: object
      properties:
        category:
          $ref: "category.yaml#/components/schemas/Response"
    Project.Request:
      type: object
      properties:
        project:
          oneOf:
            - $ref: "project.yaml#/components/schemas/ProjectId"
            - $ref: "project.yaml#/components/schemas/Request"
    Project.Response:
      type: object
      properties:
        project:
          $ref: "project.yaml#/components/schemas/Response"
    Account:
      type: object
      required:
        - account
      properties:
        account:
          $ref: "account.yaml#/components/schemas/Response"
    Recipient.Request:
      type: object
      properties:
        recipient:
          oneOf:
            - $ref: "recipient.yaml#/components/schemas/RecipientId"
            - $ref: "recipient.yaml#/components/schemas/Request"
    Recipient.Response:
      type: object
      properties:
        recipient:
          $ref: "recipient.yaml#/components/schemas/Response"
    TransferAccount:
      type: object
      required:
        - transferAccount
      properties:
        transferAccount:
          $ref: "account.yaml#/components/schemas/Response"
    PaymentRequest:
      allOf:
        - $ref: "account.yaml#/components/schemas/AccountId"
        - $ref: "#/components/schemas/Category.Request"
        - $ref: "#/components/schemas/Project.Request"
        - $ref: "#/components/schemas/Recipient.Request"
        - $ref: "#/components/schemas/IssuedAt"
        - $ref: "#/components/schemas/Invoice"
        - $ref: "#/components/schemas/Inventory.Request"
        - $ref: "#/components/schemas/Base"
    TransferRequest:
      allOf:
        - $ref: "account.yaml#/components/schemas/AccountId"
        - $ref: "#/components/schemas/IssuedAt"
        - $ref: "#/components/schemas/Base"
        - $ref: "#/components/schemas/TransferAccountId"
        - $ref: "#/components/schemas/TransferAmount"
    SplitRequestItem:
      allOf:
        - $ref: "#/components/schemas/Category.Request"
        - $ref: "#/components/schemas/Project.Request"
        - $ref: "#/components/schemas/Invoice"
        - $ref: "#/components/schemas/Inventory.Request"
        - $ref: "#/components/schemas/Base"
    SplitRequest:
      allOf:
        - $ref: "account.yaml#/components/schemas/AccountId"
        - $ref: "#/components/schemas/Recipient.Request"
        - $ref: "#/components/schemas/IssuedAt"
        - $ref: "#/components/schemas/Base"
        - type: object
          required:
            - splits
          properties:
            splits:
              type: array
              items:
                $ref: "#/components/schemas/SplitRequestItem"
    PaymentResponse:
      allOf:
        - $ref: "#/components/schemas/TransactionId"
        - $ref: "#/components/schemas/Base"
        - $ref: "#/components/schemas/IssuedAt"
        - $ref: "#/components/schemas/Invoice"
        - $ref: "#/components/schemas/Inventory.Response"
        - $ref: "#/components/schemas/Account"
        - $ref: "#/components/schemas/Category.Response"
        - $ref: "#/components/schemas/Project.Response"
        - $ref: "#/components/schemas/Recipient.Response"
        - type: object
          required:
            - transactionType
          properties:
            transactionType:
              type: string
              enum:
                - payment
    TransferResponse:
      allOf:
        - $ref: "#/components/schemas/TransactionId"
        - $ref: "#/components/schemas/Base"
        - $ref: "#/components/schemas/IssuedAt"
        - $ref: "#/components/schemas/Account"
        - $ref: "#/components/schemas/TransferAccount"
        - $ref: "#/components/schemas/TransferAmount"
        - type: object
          required:
            - transactionType
          properties:
            transactionType:
              type: string
              enum:
                - transfer
    SplitResponseItem:
      allOf:
        - $ref: "#/components/schemas/Base"
        - $ref: "#/components/schemas/Invoice"
        - $ref: "#/components/schemas/Inventory.Response"
        - $ref: "#/components/schemas/Project.Response"
        - $ref: "#/components/schemas/Category.Response"
    SplitResponse:
      allOf:
        - $ref: "#/components/schemas/TransactionId"
        - $ref: "#/components/schemas/Base"
        - $ref: "#/components/schemas/IssuedAt"
        - $ref: "#/components/schemas/Account"
        - $ref: "#/components/schemas/Recipient.Response"
        - type: object
          required:
            - transactionType
            - splits
          properties:
            transactionType:
              type: string
              enum:
                - split
            splits:
              type: array
              items:
                $ref: "#/components/schemas/SplitRequestItem"
    Response:
      oneOf:
        - $ref: "#/components/schemas/PaymentResponse"
        - $ref: "#/components/schemas/SplitResponse"
        - $ref: "#/components/schemas/TransferResponse"
