AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  Env:
    Type: String
  WebsiteDomain:
    Type: String

Resources:
  DatabaseArchiveBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  UserPool:
    Type: AWS::Cognito::UserPool
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
        InviteMessageTemplate:
          EmailSubject: "Felhasználó regisztráció"
          EmailMessage: !Sub "Kattints az alábbi linkre a jelszó megadásához: https://${WebsiteDomain}/confirm-user?email={username}&temporaryPassword={####}"
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          TemporaryPasswordValidityDays: 45
          RequireSymbols: false
      Schema:
        - Name: email
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: true
          StringAttributeConstraints:
            MinLength: "0"
            MaxLength: "2048"
      UserPoolName: !Sub Household-${Env}
  ApplicationClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub Household-${Env}-Application
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false
      TokenValidityUnits:
        IdToken: "days"
      RefreshTokenValidity: 365
      IdTokenValidity: 1
      ReadAttributes:
        - email
      UserPoolId: !Ref UserPool
      WriteAttributes:
        - email
  EditorUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId: !Ref UserPool
      GroupName: editor
  HairdresserUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId: !Ref UserPool
      GroupName: hairdresser
  AdminUser:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      UserPoolId: !Ref UserPool
      Username: "{{resolve:ssm:AdminUserEmail:1}}"
      UserAttributes:
        - Name: email
          Value: "{{resolve:ssm:AdminUserEmail:1}}"
  AdminUserToEditorGroup:
    Type: AWS::Cognito::UserPoolUserToGroupAttachment
    DependsOn: AdminUser
    Properties:
      GroupName: editor
      UserPoolId: !Ref UserPool
      Username: "{{resolve:ssm:AdminUserEmail:1}}"
  AdminUserToHairdresserGroup:
    Type: AWS::Cognito::UserPoolUserToGroupAttachment
    DependsOn: AdminUser
    Properties:
      GroupName: hairdresser
      UserPoolId: !Ref UserPool
      Username: "{{resolve:ssm:AdminUserEmail:1}}"

Outputs:
  UserPoolId:
    Value: !Ref UserPool
  ClientId:
    Value: !Ref ApplicationClient
  UserPoolArn:
    Value: !GetAtt UserPool.Arn
  DatabaseArchiveBucket:
    Value: !Ref DatabaseArchiveBucket
