AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Parameters:
  Env:
    Type: String

Resources:
  MongooseLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: layers/mongoose
      LayerName: !Sub Household-${Env}-MongooseLayer
      RetentionPolicy: Delete
      CompatibleRuntimes:
        - nodejs14.x

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub Household-${Env}-LambdaRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action:
            - sts:AssumeRole
          Principal:
            Service:
              - lambda.amazonaws.com
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:CreateLogGroup
                  - sns:Publish
                  - xray:*
                  - cognito-idp:AdminCreateUser
                  - cognito-idp:AdminGetUser
                  - cognito-idp:AdminInitiateAuth
                  - cognito-idp:AdminAddUserToGroup
                  - cognito-idp:AdminSetUserPassword
                  - cloudformation:DescribeStacks
                  - lambda:InvokeFunction
                  - sqs:SendMessage
                  - s3:PutObject
                Resource: "*"

  WebsiteBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  WebSiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: HouseholdPolicy
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub '${WebsiteBucket.Arn}/*'
      Bucket: !Ref WebsiteBucket

Outputs:
  LambdaRoleArn:
    Value: !GetAtt LambdaRole.Arn
  WebsiteBucket:
    Value: !Ref WebsiteBucket
  MongooseLayer:
    Value: !Ref MongooseLayer

